*** UPPAAL_Model_Checker.sml	2017-10-23 16:39:44.643351300 +0200
--- UPPAAL_Model_Checker_patched.sml	2017-10-23 16:39:28.372164600 +0200
***************
*** 357,394 ****
  end; (*struct Bits_Integer*)
  
  
-     structure Gabow_Skeleton_Statistics = struct
-       val active = Unsynchronized.ref false
-       val num_vis = Unsynchronized.ref 0
- 
-       val time = Unsynchronized.ref Time.zeroTime
- 
-       fun is_active () = !active
-       fun newnode () =
-       (
-         num_vis := !num_vis + 1;
-         if !num_vis mod 10000 = 0 then tracing (IntInf.toString (!num_vis) ^ "\n") else ()
-       )
- 
-       fun start () = (active := true; time := Time.now ())
-       fun stop () = (time := Time.- (Time.now (), !time))
- 
-       fun to_string () = let
-         val t = Time.toMilliseconds (!time)
-         val states_per_ms = real (!num_vis) / real t
-         val realStr = Real.fmt (StringCvt.FIX (SOME 2))
-       in
-         "Required time: " ^ IntInf.toString (t) ^ "ms\n"
-       ^ "States per ms: " ^ realStr states_per_ms ^ "\n"
-       ^ "# states: " ^ IntInf.toString (!num_vis) ^ "\n"
-       end
-         
-       val _ = Statistics.register_stat ("Gabow-Skeleton",is_active,to_string)
- 
-     end
- 
- 
  structure Model_Checker : sig
    datatype int = Int_of_integer of IntInf.int
    val integer_of_int : int -> IntInf.int
    datatype 'a itself = Type
--- 357,364 ----
  end; (*struct Bits_Integer*)
  
  
  structure Model_Checker : sig
+   val debug_level: int Unsynchronized.ref
    datatype int = Int_of_integer of IntInf.int
    val integer_of_int : int -> IntInf.int
    datatype 'a itself = Type
***************
*** 481,486 ****
--- 451,458 ----
                (int instrc option) list -> ((int list) list) list
  end = struct
  
+ val debug_level = Unsynchronized.ref 0;
+ 
  datatype int = Int_of_integer of IntInf.int;
  
  fun integer_of_int (Int_of_integer k) = k;
***************
*** 3037,3043 ****
  fun push_code (A1_, A2_) g_impl =
    (fn x => fn (xa, (xb, (xc, xd))) =>
      let
-       val _ = Gabow_Skeleton_Statistics.newnode ();
        val xf = as_length xa;
        val xg = as_push xa x;
        val xh = as_push xb xf;
--- 3009,3014 ----
***************
*** 3051,3057 ****
  
  fun compute_SCC_tr (A1_, A2_) g =
    let
-     val _ = Gabow_Skeleton_Statistics.start ();
      val xa = ([], ahm_empty (def_hashmap_size A2_ Type));
      val a =
        foldli (id (gi_V0 g)) (fn _ => true)
--- 3022,3027 ----
***************
*** 3120,3126 ****
              else (a, b)))
          xa;
      val (aa, _) = a;
-     val _ = Gabow_Skeleton_Statistics.stop ();
    in
      aa
    end;
--- 3090,3095 ----
